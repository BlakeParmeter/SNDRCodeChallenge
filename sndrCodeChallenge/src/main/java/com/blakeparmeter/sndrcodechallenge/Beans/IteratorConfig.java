/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.blakeparmeter.sndrcodechallenge.Beans;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Blake
 */
@JsonAutoDetect(getterVisibility = JsonAutoDetect.Visibility.NONE, 
        isGetterVisibility = JsonAutoDetect.Visibility.NONE)
public class IteratorConfig {
    
    @JsonProperty(required = true) private long currentIndex = -1L;
    @JsonProperty(required = true) private long startIndex = -1L;
    @JsonProperty(required = true) private long maxPhrases = -1L;
    @JsonProperty(required = true) private List<Long> shuffleValues = new ArrayList();
    
    /**
     * @return The number of phrases remaining in this iterator configuration. 
     */
    public long getNumRemaining(){
        if(currentIndex == -1 || startIndex == -1){
            return maxPhrases;
        }else if(currentIndex > startIndex){
            return startIndex + maxPhrases - currentIndex;
        }else{
            return startIndex - currentIndex;
        }
    }
    
    /**
     * Determines if the Iterator has completed, will initialize values if they 
     * have not been initialized.  
     * @return true if there are no more possible iterations. 
     */
    public boolean isFinished(){
        if(currentIndex == -1){
            currentIndex = startIndex;
            return false;
        }
        return currentIndex == startIndex;
    }
    
    public void incrementCurrentIndex(){
        currentIndex = (currentIndex + 1) % maxPhrases;
    }
    
    //GETTERS AND SETTERS (GENERATED BY IDE)

    public long getCurrentIndex() {
        return currentIndex;
    }

    public void setCurrentIndex(long currentIndex) {
        this.currentIndex = currentIndex;
    }

    public long getStartIndex() {
        return startIndex;
    }

    public void setStartIndex(long startIndex) {
        this.startIndex = startIndex;
    }

    public long getMaxPhrases() {
        return maxPhrases;
    }

    public void setMaxPhrases(long maxPhrases) {
        this.maxPhrases = maxPhrases;
    }

    public List<Long> getShuffleValues() {
        return shuffleValues;
    }

    public void setShuffleValues(List<Long> shuffleValues) {
        this.shuffleValues = shuffleValues;
    }
}
